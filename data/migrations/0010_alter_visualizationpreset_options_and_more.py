# Generated by Django 5.2.2 on 2025-06-24 07:07

import django.contrib.postgres.fields
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('core', '0007_alter_category_name_alter_class_name_and_more'),
        ('data', '0009_audiofeature_num_samples_audiofeature_sample_rate'),
    ]

    operations = [
        migrations.AlterModelOptions(
            name='visualizationpreset',
            options={'ordering': ['name']},
        ),
        migrations.RemoveField(
            model_name='noiseanalysis',
            name='fluctuation_strength',
        ),
        migrations.RemoveField(
            model_name='noiseanalysis',
            name='loudness',
        ),
        migrations.RemoveField(
            model_name='noiseanalysis',
            name='roughness',
        ),
        migrations.RemoveField(
            model_name='noiseanalysis',
            name='sharpness',
        ),
        migrations.RemoveField(
            model_name='noisedataset',
            name='duration',
        ),
        migrations.AddField(
            model_name='visualizationpreset',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True, default=django.utils.timezone.now),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='visualizationpreset',
            name='noise_dataset',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='visualization_presets', to='data.noisedataset'),
        ),
        migrations.AddField(
            model_name='visualizationpreset',
            name='updated_at',
            field=models.DateTimeField(auto_now=True),
        ),
        migrations.AlterField(
            model_name='audiofeature',
            name='chroma_stft',
            field=django.contrib.postgres.fields.ArrayField(base_field=models.FloatField(), help_text='Chroma features from Short-Time Fourier Transform', null=True, size=12),
        ),
        migrations.AlterField(
            model_name='audiofeature',
            name='harmonic_ratio',
            field=models.FloatField(help_text='Harmonic Ratio', null=True),
        ),
        migrations.AlterField(
            model_name='audiofeature',
            name='mel_spectrogram',
            field=models.JSONField(help_text='Mel spectrogram data', null=True),
        ),
        migrations.AlterField(
            model_name='audiofeature',
            name='mfccs',
            field=django.contrib.postgres.fields.ArrayField(base_field=models.FloatField(), help_text='Mel-Frequency Cepstral Coefficients', null=True, size=13),
        ),
        migrations.AlterField(
            model_name='audiofeature',
            name='percussive_ratio',
            field=models.FloatField(help_text='Percussive Ratio', null=True),
        ),
        migrations.AlterField(
            model_name='audiofeature',
            name='rms_energy',
            field=models.FloatField(help_text='Root Mean Square energy', null=True),
        ),
        migrations.AlterField(
            model_name='audiofeature',
            name='spectral_bandwidth',
            field=models.FloatField(help_text='Spectral Bandwidth', null=True),
        ),
        migrations.AlterField(
            model_name='audiofeature',
            name='spectral_centroid',
            field=models.FloatField(help_text='Spectral Centroid', null=True),
        ),
        migrations.AlterField(
            model_name='audiofeature',
            name='spectral_flatness',
            field=models.FloatField(help_text='Spectral Flatness', null=True),
        ),
        migrations.AlterField(
            model_name='audiofeature',
            name='spectral_rolloff',
            field=models.FloatField(help_text='Spectral Rolloff', null=True),
        ),
        migrations.AlterField(
            model_name='audiofeature',
            name='waveform_data',
            field=models.JSONField(help_text='Waveform data for visualization', null=True),
        ),
        migrations.AlterField(
            model_name='audiofeature',
            name='zero_crossing_rate',
            field=models.FloatField(help_text='Zero Crossing Rate', null=True),
        ),
        migrations.AlterField(
            model_name='noiseanalysis',
            name='dominant_frequency',
            field=models.FloatField(help_text='Dominant frequency in Hz', null=True),
        ),
        migrations.AlterField(
            model_name='noiseanalysis',
            name='event_durations',
            field=django.contrib.postgres.fields.ArrayField(base_field=models.FloatField(), help_text='Durations of detected events in seconds', null=True, size=None),
        ),
        migrations.AlterField(
            model_name='noiseanalysis',
            name='frequency_range',
            field=models.CharField(help_text='Frequency range (low-high)', max_length=100, null=True),
        ),
        migrations.AlterField(
            model_name='noiseanalysis',
            name='max_db',
            field=models.FloatField(help_text='Maximum decibel level', null=True),
        ),
        migrations.AlterField(
            model_name='noiseanalysis',
            name='mean_db',
            field=models.FloatField(help_text='Mean decibel level', null=True),
        ),
        migrations.AlterField(
            model_name='noiseanalysis',
            name='min_db',
            field=models.FloatField(help_text='Minimum decibel level', null=True),
        ),
        migrations.AlterField(
            model_name='noiseanalysis',
            name='peak_count',
            field=models.IntegerField(help_text='Number of significant peaks', null=True),
        ),
        migrations.AlterField(
            model_name='noiseanalysis',
            name='peak_interval_mean',
            field=models.FloatField(help_text='Mean interval between peaks', null=True),
        ),
        migrations.AlterField(
            model_name='noiseanalysis',
            name='std_db',
            field=models.FloatField(help_text='Standard deviation of decibel levels', null=True),
        ),
        migrations.AlterField(
            model_name='noisedataset',
            name='category',
            field=models.ForeignKey(help_text='Category of the data', null=True, on_delete=django.db.models.deletion.PROTECT, to='core.category'),
        ),
        migrations.AlterField(
            model_name='noisedataset',
            name='community',
            field=models.ForeignKey(help_text='Specific community where recording was made', null=True, on_delete=django.db.models.deletion.PROTECT, to='core.community'),
        ),
        migrations.AlterField(
            model_name='noisedataset',
            name='microphone_type',
            field=models.ForeignKey(help_text='Microphone Type', null=True, on_delete=django.db.models.deletion.PROTECT, to='core.microphone_type'),
        ),
        migrations.AlterField(
            model_name='noisedataset',
            name='region',
            field=models.ForeignKey(help_text='Select the region where recording was made', null=True, on_delete=django.db.models.deletion.PROTECT, to='core.region'),
        ),
        migrations.AlterField(
            model_name='visualizationpreset',
            name='alt_text_template',
            field=models.TextField(blank=True, help_text='Template for generating alt text'),
        ),
        migrations.AlterField(
            model_name='visualizationpreset',
            name='chart_type',
            field=models.CharField(choices=[('waveform', 'Waveform'), ('spectrogram', 'Spectrogram'), ('spectrum', 'Frequency Spectrum'), ('mfcc', 'MFCCs'), ('chroma', 'Chroma Features'), ('db_trend', 'Decibel Trend'), ('time_analysis', 'Time Analysis')], max_length=50),
        ),
        migrations.AlterField(
            model_name='visualizationpreset',
            name='description',
            field=models.TextField(blank=True),
        ),
        migrations.DeleteModel(
            name='NoiseProfile',
        ),
    ]
