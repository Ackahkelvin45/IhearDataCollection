services:
  nginx:
    image: nginx:1.27-alpine
    restart: always
    volumes:
      - ./static:/code/static
      - ./media:/code/media
      - ./nginx/:/etc/nginx/conf.d
    ports:
      - '8000:80'
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M
    depends_on:
      - web

  web:
    image: &image ihdc
    build: .
    deploy:
      replicas: 3
      update_config:
        parallelism: 2
        delay: 10s
        order: start-first
      resources:
        limits:
          cpus: '0.5'
          memory: 1G
    restart: always
    command: [ "uvicorn", "--host", "0.0.0.0", "--port", "8000", "--workers", "2", "--log-level", "info", "datacollection.asgi:application" ]
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./static:/code/static
      - ./media:/code/media
      - shared_uploads:/shared_uploads
    env_file: &env_file ./.env
    depends_on:
      - db
      - redis

  db:
    image: postgres:16-alpine
    command: postgres -N 568
    restart: always
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_DB=iheardatadb
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=admin
      - PGDATA=/var/lib/postgresql/data/

  redis:
    restart: always
    image: redis:7-alpine
    command: redis-server --loglevel warning
    volumes:
      - redis_data:/data
    deploy:
      resources:
        limits:
          memory: 512M

  migration:
    image: *image
    env_file: *env_file
    command: /bin/sh -c 'python manage.py migrate && python manage.py collectstatic --noinput && python manage.py seed_db'
    deploy:
      resources:
        limits:
          cpus: '0.2'
          memory: 256M
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./static:/code/static
      - ./media:/code/media
    depends_on:
      - db
      - redis

  celery-worker:
    image: *image
    restart: unless-stopped
    env_file: *env_file
    command: [ "celery", "-A", "datacollection", "worker", "-l", "DEBUG", "--concurrency", "1" ]
    deploy:
      replicas: 1
      resources:
        limits:
          cpus: '0.5'
          memory: 1G
      update_config:
        parallelism: 2
        delay: 10s
        order: stop-first
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./static:/code/static
      - ./media:/code/media
      - shared_uploads:/shared_uploads
    depends_on:
      - db
      - redis

volumes:
  postgres_data:
  redis_data:
  shared_uploads:
